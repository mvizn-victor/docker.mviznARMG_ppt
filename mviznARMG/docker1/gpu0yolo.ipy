#version:hh27 
helperfunprint=0
%run -i /home/mvizn/helperfun.ipy
#disable clear_output
clear_output=voidfun
print('\n')
os.environ['CUDA_VISIBLE_DEVICES']='0'
try:
    devel
except:
    devel=0
l__procname=[]
l__weightsfile=[]
l__yolo=[]

dummyimage=np.zeros((720,1280,3),dtype=np.uint8)

procname='hncdstopyolo'
weightsfile='HNCDS/weights/HNCDS.weights'
yolo=YOLO(weightsfile)
results = yolo.infer(dummyimage)
l__procname.append(procname)
l__weightsfile.append(weightsfile)
l__yolo.append(yolo)

procname='hncdssideyolo'
weightsfile='HNCDS/weights/HNCDSside.weights'
yolo=YOLO(weightsfile)
results = yolo.infer(dummyimage)
l__procname.append(procname)
l__weightsfile.append(weightsfile)
l__yolo.append(yolo)


procname='hncdsinception'
weightsfile='HNCDS/weights/HNCDS.pb'
yolo=Inception(weightsfile)
results = yolo.infer(dummyimage)
l__procname.append(procname)
l__weightsfile.append(weightsfile)
l__yolo.append(yolo)


#logfile1 clears in each iteration
#logfile0 persistent

try:
    noprint=0
except:
    noprint=1


if noprint:
    print0=voidfun
    print1=voidfun

d__print0={}
d__status={}
for procname in l__procname:
    os.system(f'rm /dev/shm/{procname}/*.jpg')
    logfile0=makedirsf(f'/opt/captures/logs/{procname}.log')
    #print0=printfile(logfile0,'a',prefixfun=lambda:procname+' '+getYmdHMS())
    def print0(*args,**kwargs):
        return print(procname,*args,**kwargs)
    if noprint:
        print0=voidfun
        print1=voidfun
    print0('print0 test')
    print('print test')
    d__print0[procname]=print0
    status={}
    status['T']=0
    status['i1']=0
    status['i2']=0
    status['s']=''
    status['f']=''
    d__status[procname]=status
while True:
    for procname,yolo in zip(l__procname,l__yolo):
        #print(procname)
        print0=d__print0[procname]
        status=d__status[procname]
        status['i1']+=1
        if time.time()-status['T']>1:
            status['T']=time.time()
            print0('heartbeat1')
            print0('i1',status['i1'])
            print0('i2',status['i2'])
            print0('f',status['f'])
            print0(status['s'])
        logfile1=io.StringIO()
        try:
            procname
            try:
                f=min(glob.glob(f'/dev/shm/{procname}/*.jpg'))
                status['f']=f
                if time.time()-os.path.getmtime(f)>11:
                    try:
                        print0('remove',f,'age',time.time()-os.path.getmtime(f))
                        os.unlink(f)
                    except Exception as e:
                        printerror(e,print=print0)
                        pass
                    continue
            except:
                #no files in queue ignore error
                raise MyExc('e1')
            if 1:
                if noprint:
                    print1=voidfun
                else:
                    print1=printfile(logfile1,'w')
                    #print1=print0
                clear_output()
                print1(0)
                T=time.time()
                if not waittillvalidimage(f):
                    os.unlink(f)
                    print1('invalid image')
                    continue
                print1('T1 waitimage',time.time()-T)
                T=time.time()
                frame=cv2.imread(f)
                print1('frame.shape',frame.shape)
                print1('T2 imread',time.time()-T)
                os.unlink(f)
                fout=f.replace('.jpg','.pkl')
                T=time.time() 
                if procname in ['hncdssideyolo','hncdstopyolo','clps_yolo']:
                    res = yolo.inferold(frame)
                else:
                    res = yolo.infer(frame)
                print1('T3 infer',time.time()-T)
                print1('res',res)
                T=time.time()
                pickle.dump(res,open(fout,'wb'))
                print1('T4 dump pickle',time.time()-T)
                print1(7)
                #print0(getvalue(logfile1))
        except kbi:
            raise
        except MyExc as e:
            if e.args[0]=='e1':
                pass
        except Exception as e:
            #limit to 1 error every 1 s
            try:
                Tprinterror
            except:
                Tprinterror=0
            if time.time()-Tprinterror>1:
                Tprinterror=time.time()
                print0('<sio>')
                print0(getvalue(logfile1))
                print0('</sio>')
                printerror(e,print=print0)
        status['i2']+=1
    time.sleep(0.001)
